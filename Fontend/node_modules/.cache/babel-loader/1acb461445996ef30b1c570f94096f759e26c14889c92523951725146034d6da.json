{"ast":null,"code":"var _jsxFileName = \"/home/akshatgg/projects/Pathogen_Detection_AI/Fontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport UploadForm from \"./components/UploadForm\";\nimport Results from \"./components/Results\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prediction, setPrediction] = useState(null);\n  const handleUpload = async (image, callback) => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/predict/\", formData);\n      setPrediction(response.data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Prediction failed.\");\n    }\n    callback();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pathogen Detector AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n      onUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      prediction: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xYcGnI7SIvYHB6EBcKxnJAZcgt8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","UploadForm","Results","jsxDEV","_jsxDEV","App","_s","prediction","setPrediction","handleUpload","image","callback","formData","FormData","append","response","post","data","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpload","_c","$RefreshReg$"],"sources":["/home/akshatgg/projects/Pathogen_Detection_AI/Fontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport UploadForm from \"./components/UploadForm\";\nimport Results from \"./components/Results\";\nimport \"./styles.css\";\n\nfunction App() {\n  const [prediction, setPrediction] = useState(null);\n\n  const handleUpload = async (image, callback) => {\n    const formData = new FormData();\n    formData.append(\"file\", image);\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/predict/\", formData);\n      setPrediction(response.data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Prediction failed.\");\n    }\n    callback();\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Pathogen Detector AI</h2>\n      <UploadForm onUpload={handleUpload} />\n      <Results prediction={prediction} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMU,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC9C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,KAAK,CAAC;IAE9B,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,gCAAgC,EAAEJ,QAAQ,CAAC;MAC7EJ,aAAa,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BE,KAAK,CAAC,oBAAoB,CAAC;IAC7B;IACAT,QAAQ,CAAC,CAAC;EACZ,CAAC;EAED,oBACEP,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BtB,OAAA,CAACH,UAAU;MAAC0B,QAAQ,EAAElB;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCtB,OAAA,CAACF,OAAO;MAACK,UAAU,EAAEA;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAACpB,EAAA,CAxBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}